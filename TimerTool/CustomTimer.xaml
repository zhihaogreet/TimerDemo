<ct:CustomWindow
    x:Class="TimerTool.CustomTimer"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ct="clr-namespace:TimerTool"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:helper="clr-namespace:TimerTool.Helpers"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    x:Name="me"
    Title="MainWindow"
    FontSize="40"
    Foreground="#000000"
    IsMinStauts="{Binding IsMinStatus, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
    IsShowMaxButton="True"
    IsShowTitleLine="False"
    WindowState="{Binding WinState, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
    isFollowBigger="True">
    <ct:CustomWindow.Style>

        <Style TargetType="{x:Type ct:CustomWindow}">
            <Setter Property="dWidth" Value="1086" />
            <Setter Property="dHeight" Value="1210" />
            <Setter Property="Topmost" Value="False" />
            <Setter Property="WindowPosition" Value="Resrory" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Status}" Value="{x:Static ct:TimerStatus.MinWin}">
                    <Setter Property="dWidth" Value="600" />
                    <Setter Property="dHeight" Value="118.37" />
                    <Setter Property="WindowPosition" Value="TopRight" />
                </DataTrigger>

                <Trigger Property="WindowState" Value="Maximized">

                    <Setter Property="Foreground" Value="White" />
                </Trigger>
                <Trigger Property="IsMinStauts" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Opacity="0.0001" Color="Black" />
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Topmost" Value="True" />
                </Trigger>
                <DataTrigger Binding="{Binding Status}" Value="{x:Static ct:TimerStatus.Nomal}">
                    <Setter Property="IsShowMinButton" Value="True" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Status}" Value="{x:Static ct:TimerStatus.OverTime}">
                    <Setter Property="IsShowMinButton" Value="True" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </ct:CustomWindow.Style>
    <Window.Resources>
        <ResourceDictionary>
            <ct:PageStatusConvert x:Key="PageStatusConvert" />

            <Style
                x:Key="btBlueBg"
                BasedOn="{StaticResource ToggleButtonBaseStyle}"
                TargetType="{x:Type ToggleButton}">
                <Setter Property="BorderBrush" Value="#298CFF" />
                <Setter Property="BorderThickness" Value="3" />
                <Setter Property="Background" Value="#298CFF" />
                <Setter Property="Foreground" Value="#ffffff" />
                <Setter Property="FontSize" Value="40" />
                <Setter Property="Height" Value="40" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border
                                Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(hc:BorderElement.CornerRadius)}"
                                SnapsToDevicePixels="True">
                                <ContentPresenter
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Content="{TemplateBinding Content}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style
                x:Key="btWhiteBg"
                BasedOn="{StaticResource ToggleButtonBaseStyle}"
                TargetType="{x:Type ToggleButton}">
                <Setter Property="BorderBrush" Value="#298CFF" />
                <Setter Property="BorderThickness" Value="3" />
                <Setter Property="Background" Value="#ffffff" />
                <Setter Property="Foreground" Value="#298CFF" />
                <Setter Property="FontSize" Value="40" />
                <Setter Property="Height" Value="40" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border
                                x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(hc:BorderElement.CornerRadius)}"
                                SnapsToDevicePixels="True">
                                <TextBlock
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Foreground="{TemplateBinding Foreground}"
                                    Text="{TemplateBinding Content}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--  关闭全屏按钮  -->
            <Style
                x:Key="CloseMaxStyle"
                BasedOn="{StaticResource ToggleButtonBaseStyle}"
                TargetType="{x:Type ToggleButton}">
                <Setter Property="BorderBrush" Value="#667180" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Background" Value="#667180" />
                <Setter Property="Foreground" Value="#ffffff" />
                <Setter Property="FontSize" Value="25" />
                <Setter Property="Height" Value="60" />
                <Setter Property="Width" Value="200" />
                <Setter Property="hc:BorderElement.CornerRadius" Value="35" />
                <Setter Property="Visibility" Value="Collapsed" />
                <Setter Property="Content" Value="Exit full screen" />
                <Setter Property="Command" Value="{x:Static SystemCommands.RestoreWindowCommand}" />

                <Style.Triggers>
                    <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType={x:Type ct:CustomWindow}}}" Value="Maximized">
                        <Setter Property="Visibility" Value="Visible" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>



            <Style x:Key="selectbtn" TargetType="RadioButton">
                <Setter Property="BorderBrush" Value="#298CFF" />
                <Setter Property="BorderThickness" Value="3" />
                <Setter Property="Background" Value="#ffffff" />
                <Setter Property="Width" Value="214" />
                <Setter Property="FontSize" Value="{Binding ElementName=me, Path=FontSize}" />
                <Setter Property="Height" Value="84" />
                <Setter Property="Foreground" Value="#298CFF" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RadioButton}">
                            <Border
                                x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(hc:BorderElement.CornerRadius)}"
                                SnapsToDevicePixels="True">
                                <TextBlock
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Foreground="{TemplateBinding Foreground}"
                                    Text="{TemplateBinding Content}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Background" Value="#298CFF" />
                        <Setter Property="Foreground" Value="#ffffff" />
                    </Trigger>
                    <DataTrigger Binding="{Binding Path=Visibility, RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type ContentControl}}}" Value="Collapsed">
                        <Setter Property="IsChecked" Value="False" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType={x:Type ct:CustomWindow}}}" Value="Maximized">
                        <Setter Property="Width" Value="150" />
                        <Setter Property="Height" Value="70" />
                        <Setter Property="FontSize" Value="30" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="tbNumStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="FontFamily" Value="DIN Alternate" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="FontSize" Value="160" />
                <Setter Property="Foreground" Value="#000000" />
            </Style>

            <Style x:Key="tbNumMinStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FontFamily" Value="DIN Alternate" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="FontSize" Value="56" />
                <Setter Property="Foreground" Value="#ffffff" />
            </Style>

            <Style x:Key="tbTimeStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="FontSize" Value="64" />
                <Setter Property="Foreground" Value="#000000" />
            </Style>

            <Style x:Key="tbTimeMinStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="FontSize" Value="32" />
                <Setter Property="Foreground" Value="#ffffff" />
            </Style>

            <!--  选择时间item样式  -->
            <DataTemplate x:Key="ItemTemplateStyle">
                <TextBlock
                    FontFamily="D-DIN"
                    FontSize="160"
                    FontWeight="Bold"
                    Text="{Binding .}" />
            </DataTemplate>

            <!--  设置时间界面  -->
            <ControlTemplate x:Key="OpenTime" TargetType="{x:Type ContentControl}">
                <!--  设置时间页面  -->
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="2*" />
                        <RowDefinition Height="0.5*" />
                        <RowDefinition Height="0.5*" />
                    </Grid.RowDefinitions>

                    <!--  时间段  -->
                    <StackPanel
                        Name="ggid"
                        Width="960"
                        Height="540"
                        Margin="150,0,0,0"
                        Orientation="Horizontal">
                        <ct:TimerScrollViewer
                            x:Name="HourScrollView"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            PanningMode="VerticalOnly"
                            SelectTime="{Binding SelectHour, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                            VerticalScrollBarVisibility="Hidden">
                            <ct:TimerScrollViewer.OpacityMask>
                                <LinearGradientBrush StartPoint="0 0" EndPoint="0 1">
                                    <GradientStop Offset="0.0" Color="Transparent" />
                                    <GradientStop Offset="0.5" Color="#ff000000" />
                                    <GradientStop Offset="1.0" Color="Transparent" />
                                </LinearGradientBrush>
                            </ct:TimerScrollViewer.OpacityMask>
                            <ItemsControl ItemTemplate="{StaticResource ItemTemplateStyle}" ItemsSource="{Binding HourList}" />
                        </ct:TimerScrollViewer>

                        <TextBlock
                            Grid.Column="1"
                            Width="70"
                            Margin="8,0,36,0"
                            Padding="0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontFamily="D-DIN"
                            FontSize="64"
                            FontWeight="Bold"
                            Text="H"
                            TextAlignment="Center" />

                        <ct:TimerScrollViewer
                            x:Name="minScrollView"
                            Grid.Column="2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            PanningMode="VerticalOnly"
                            SelectTime="{Binding SelectMin, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                            VerticalScrollBarVisibility="Hidden">
                            <ct:TimerScrollViewer.OpacityMask>
                                <LinearGradientBrush StartPoint="0 0" EndPoint="0 1">
                                    <GradientStop Offset="0.0" Color="Transparent" />
                                    <GradientStop Offset="0.5" Color="#ff000000" />
                                    <GradientStop Offset="1.0" Color="Transparent" />
                                </LinearGradientBrush>
                            </ct:TimerScrollViewer.OpacityMask>
                            <ItemsControl ItemTemplate="{StaticResource ItemTemplateStyle}" ItemsSource="{Binding MinList}" />
                        </ct:TimerScrollViewer>

                        <TextBlock
                            Grid.Column="3"
                            Width="70"
                            Margin="8,0,36,0"
                            Padding="0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontFamily="D-DIN"
                            FontSize="64"
                            FontWeight="Bold"
                            Text="M"
                            TextAlignment="Center" />

                        <ct:TimerScrollViewer
                            x:Name="secScrollView"
                            Grid.Column="4"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            PanningMode="VerticalOnly"
                            SelectTime="{Binding SelectSecond, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                            VerticalScrollBarVisibility="Hidden">
                            <ct:TimerScrollViewer.OpacityMask>
                                <LinearGradientBrush StartPoint="0 0" EndPoint="0 1">
                                    <GradientStop Offset="0.0" Color="Transparent" />
                                    <GradientStop Offset="0.5" Color="#ff000000" />
                                    <GradientStop Offset="1.0" Color="Transparent" />
                                </LinearGradientBrush>
                            </ct:TimerScrollViewer.OpacityMask>
                            <ItemsControl ItemTemplate="{StaticResource ItemTemplateStyle}" ItemsSource="{Binding SenList}" />
                        </ct:TimerScrollViewer>

                        <TextBlock
                            Grid.Column="5"
                            Width="70"
                            Margin="8,0,0,0"
                            Padding="0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontFamily="D-DIN"
                            FontSize="64"
                            FontWeight="Bold"
                            Text="S"
                            TextAlignment="Center" />
                    </StackPanel>

                    <!--  分割线  -->
                    <Rectangle
                        Name="fenLine"
                        Grid.Row="1"
                        Width="992"
                        Height="2"
                        VerticalAlignment="Top"
                        Fill="#c5c7cb" />
                    <Grid
                        Name="gridchosetime"
                        Grid.Row="1"
                        Margin="25,5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <RadioButton
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Command="{Binding SelectMinCommand}"
                            CommandParameter="5"
                            Content="5"
                            Style="{StaticResource selectbtn}" />
                        <RadioButton
                            Grid.Column="1"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Command="{Binding SelectMinCommand}"
                            CommandParameter="10"
                            Content="10"
                            Style="{StaticResource selectbtn}" />
                        <RadioButton
                            Grid.Column="2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Command="{Binding SelectMinCommand}"
                            CommandParameter="20"
                            Content="20"
                            Style="{StaticResource selectbtn}" />
                        <RadioButton
                            Grid.Column="3"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Command="{Binding SelectMinCommand}"
                            CommandParameter="30"
                            Content="30"
                            Style="{StaticResource selectbtn}" />
                    </Grid>

                    <Grid Name="minPage" Grid.Row="2">

                        <DockPanel Grid.Row="1" LastChildFill="False">
                            <!--  铃声段  -->
                            <StackPanel DockPanel.Dock="Left" Orientation="Horizontal">
                                <TextBlock
                                    Margin="40,0,20,0"
                                    VerticalAlignment="Center"
                                    Text="Ringtone" />
                                <ToggleButton
                                    Width="100"
                                    Height="50"
                                    IsChecked="{Binding IsRing}"
                                    Style="{StaticResource ToggleButtonSwitch}" />
                            </StackPanel>

                            <ToggleButton
                                x:Name="startBtnmin"
                                Width="258"
                                Height="84"
                                Margin="0,0,40,0"
                                Command="{Binding OnStartTimerCommand}"
                                Content="Start"
                                DockPanel.Dock="Right"
                                IsEnabled="{Binding IsStartEnable}"
                                Style="{StaticResource btBlueBg}"
                                Tag="42" />
                        </DockPanel>
                    </Grid>

                    <Grid
                        x:Name="maxPage"
                        Grid.Row="2"
                        Visibility="Collapsed">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <hc:UniformSpacingPanel
                            x:Name="dockpanel"
                            Grid.Row="0"
                            Margin="0,150,0,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Orientation="Horizontal"
                            Spacing="40">
                            <Path
                                Width="40"
                                Height="40"
                                Data="{StaticResource Rington}"
                                Fill="#ffffff"
                                Stretch="Uniform" />
                            <TextBlock
                                VerticalAlignment="Center"
                                DockPanel.Dock="Left"
                                Text="Ringtone" />

                            <ToggleButton
                                x:Name="tgbtn"
                                Width="80"
                                Height="40"
                                VerticalAlignment="Bottom"
                                DockPanel.Dock="Right"
                                IsChecked="{Binding IsRing}"
                                Style="{StaticResource ToggleButtonSwitch}" />
                        </hc:UniformSpacingPanel>

                        <StackPanel
                            Grid.Row="1"
                            HorizontalAlignment="Center"
                            Orientation="Horizontal">
                            <ToggleButton
                                x:Name="closebtn"
                                Margin="30,0,30,0"
                                DockPanel.Dock="Left"
                                Style="{StaticResource CloseMaxStyle}" />

                            <ToggleButton
                                x:Name="startBtn"
                                Width="200"
                                Height="60"
                                Margin="30,0,30,0"
                                hc:BorderElement.CornerRadius="35"
                                Background="#298CFF"
                                BorderBrush="#ffffff"
                                BorderThickness="4"
                                Command="{Binding OnStartTimerCommand}"
                                Content="Start"
                                DockPanel.Dock="Right"
                                FontSize="25"
                                Foreground="#ffffff"
                                IsEnabled="{Binding IsStartEnable}" />
                        </StackPanel>
                    </Grid>
                </Grid>

                <ControlTemplate.Triggers>
                    <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType={x:Type ct:CustomWindow}}}" Value="Maximized">
                        <Setter TargetName="minPage" Property="Visibility" Value="Collapsed" />
                        <Setter TargetName="maxPage" Property="Visibility" Value="Visible" />
                        <!--<Setter TargetName="Rect" Property="Visibility" Value="Collapsed" />-->
                        <!--<Setter TargetName="ggid" Property="Width" Value="900" />-->
                        <Setter TargetName="ggid" Property="Margin" Value="150,-180,0,0" />

                        <Setter TargetName="gridchosetime" Property="Margin" Value="150,-300,150,0" />
                        <Setter TargetName="maxPage" Property="Margin" Value="0,-300,0,0" />
                        <Setter TargetName="fenLine" Property="Visibility" Value="Collapsed" />
                    </DataTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!--  Start界面  -->
            <ControlTemplate x:Key="IsStarting" TargetType="{x:Type ContentControl}">

                <Grid Margin="0,100,0,0">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="3.5*" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid x:Name="gggid">

                        <StackPanel
                            Height="170"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Orientation="Horizontal">
                            <TextBlock Style="{StaticResource tbNumStyle}" Text="{Binding Source={x:Static helper:TimeSystem.Instance}, Path=CurrentTime.TimerList[0]}" />
                            <TextBlock Style="{StaticResource tbNumStyle}" Text="{Binding Source={x:Static helper:TimeSystem.Instance}, Path=CurrentTime.TimerList[1]}" />
                            <TextBlock
                                Margin="8,0,37,0"
                                VerticalAlignment="Bottom"
                                Style="{StaticResource tbTimeStyle}"
                                Text="H" />
                            <TextBlock Style="{StaticResource tbNumStyle}" Text="{Binding Source={x:Static helper:TimeSystem.Instance}, Path=CurrentTime.TimerList[2]}" />
                            <TextBlock Style="{StaticResource tbNumStyle}" Text="{Binding Source={x:Static helper:TimeSystem.Instance}, Path=CurrentTime.TimerList[3]}" />
                            <TextBlock
                                Margin="8,0,37,0"
                                VerticalAlignment="Bottom"
                                Style="{StaticResource tbTimeStyle}"
                                Text="M" />
                            <TextBlock Style="{StaticResource tbNumStyle}" Text="{Binding Source={x:Static helper:TimeSystem.Instance}, Path=CurrentTime.TimerList[4]}" />
                            <TextBlock Style="{StaticResource tbNumStyle}" Text="{Binding Source={x:Static helper:TimeSystem.Instance}, Path=CurrentTime.TimerList[5]}" />
                            <TextBlock
                                Margin="8,0,37,0"
                                VerticalAlignment="Bottom"
                                Style="{StaticResource tbTimeStyle}"
                                Text="S" />

                        </StackPanel>
                    </Grid>

                    <Grid Name="minPage" Grid.Row="1">

                        <DockPanel
                            Name="startMinshow"
                            Margin="25,50"
                            VerticalAlignment="Bottom"
                            LastChildFill="False">
                            <!--  铃声段  -->
                            <StackPanel DockPanel.Dock="Left" Orientation="Horizontal">
                                <TextBlock
                                    Margin="40,0"
                                    VerticalAlignment="Center"
                                    Text="Ringtone" />
                                <ToggleButton
                                    Width="100"
                                    Height="50"
                                    IsChecked="{Binding IsRing}"
                                    Style="{StaticResource ToggleButtonSwitch}" />
                            </StackPanel>

                            <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
                                <!--<ToggleButton
                                  Width="100"
                                  Height="60"
                                  Margin="0,0,40,0"
                                  Background="Transparent"
                                  BorderThickness="0"
                                  Command="{Binding OnSettingAgainCommand}"
                                  Content="ReSet"
                                  Style="{x:Null}" />-->

                                <Button
                                    Name="CancelText"
                                    Height="60"
                                    Margin="0,0,40,0"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    hc:BorderElement.CornerRadius="10"
                                    Background="Transparent"
                                    BorderThickness="0"
                                    Command="{Binding OnSettingAgainCommand}"
                                    Content="ReSet"
                                    FontSize="40"
                                    Foreground="#636870" />

                                <ToggleButton
                                    Width="176"
                                    Height="84"
                                    Command="{Binding OnPauseOrContinueCommand}"
                                    Tag="42">
                                    <ToggleButton.Style>
                                        <Style BasedOn="{StaticResource btBlueBg}" TargetType="ToggleButton">
                                            <Setter Property="Content" Value="Pause" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Source={x:Static helper:TimeSystem.Instance}, Path=IsPause}" Value="true">
                                                    <Setter Property="Content" Value="Continue" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                            </StackPanel>
                        </DockPanel>
                    </Grid>
                    <Grid
                        Name="maxPage"
                        Grid.Row="1"
                        Margin="0,-400,0,0"
                        Visibility="Collapsed">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <hc:UniformSpacingPanel
                            Grid.Row="0"
                            Margin="0,-50,0,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Orientation="Horizontal"
                            Spacing="40">
                            <Path
                                Width="40"
                                Height="40"
                                Data="{StaticResource Rington}"
                                Fill="#ffffff"
                                Stretch="Uniform" />
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Text="Ringtone" />

                            <ToggleButton
                                Width="80"
                                Height="50"
                                VerticalAlignment="Center"
                                IsChecked="{Binding IsRing}"
                                Style="{StaticResource ToggleButtonSwitch}" />
                        </hc:UniformSpacingPanel>
                        <hc:UniformSpacingPanel
                            Grid.Row="1"
                            Margin="0,0,0,100"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Bottom"
                            Spacing="100">
                            <ToggleButton
                                VerticalAlignment="Center"
                                DockPanel.Dock="Left"
                                Style="{StaticResource CloseMaxStyle}" />

                            <ToggleButton
                                Width="120"
                                Height="60"
                                HorizontalAlignment="Right"
                                hc:BorderElement.CornerRadius="30"
                                Background="#667180"
                                BorderBrush="#667180"
                                Command="{Binding OnSettingAgainCommand}"
                                Content="ReSet"
                                FontSize="25"
                                Foreground="#ffffff" />

                            <ToggleButton
                                Grid.Row="2"
                                Grid.Column="1"
                                Width="130"
                                Height="60"
                                Margin="10"
                                HorizontalAlignment="Stretch"
                                hc:BorderElement.CornerRadius="30"
                                Background="#298CFF"
                                BorderBrush="#ffffff"
                                BorderThickness="4"
                                Command="{Binding OnPauseOrContinueCommand}"
                                FontSize="25"
                                Foreground="#ffffff">
                                <ToggleButton.Style>
                                    <Style BasedOn="{StaticResource ToggleButtonBaseStyle}" TargetType="ToggleButton">
                                        <Setter Property="Content" Value="Pause" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Source={x:Static helper:TimeSystem.Instance}, Path=IsPause}" Value="true">
                                                <Setter Property="Content" Value="Continue" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                        </hc:UniformSpacingPanel>
                    </Grid>
                </Grid>

                <ControlTemplate.Triggers>
                    <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType={x:Type ct:CustomWindow}}}" Value="Maximized">

                        <Setter TargetName="minPage" Property="Visibility" Value="Collapsed" />
                        <Setter TargetName="maxPage" Property="Visibility" Value="Visible" />
                        <Setter TargetName="gggid" Property="Margin" Value="0,-300,0,0" />
                    </DataTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!--  结束计时界面  -->
            <ControlTemplate x:Key="EndTime" TargetType="{x:Type ContentControl}">
                <Grid Name="grid1" Margin="0,100,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="3.5*" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid x:Name="gggid">

                        <StackPanel
                            Height="170"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Orientation="Horizontal">
                            <TextBlock
                                VerticalAlignment="Center"
                                FontSize="160"
                                Foreground="#000000"
                                Text="-" />
                            <TextBlock Style="{StaticResource tbNumStyle}" Text="{Binding Source={x:Static helper:TimeSystem.Instance}, Path=CurrentTime.TimerList[0]}" />
                            <TextBlock Style="{StaticResource tbNumStyle}" Text="{Binding Source={x:Static helper:TimeSystem.Instance}, Path=CurrentTime.TimerList[1]}" />
                            <TextBlock
                                Margin="8,0,37,0"
                                VerticalAlignment="Bottom"
                                Style="{StaticResource tbTimeStyle}"
                                Text="H" />
                            <TextBlock Style="{StaticResource tbNumStyle}" Text="{Binding Source={x:Static helper:TimeSystem.Instance}, Path=CurrentTime.TimerList[2]}" />
                            <TextBlock Style="{StaticResource tbNumStyle}" Text="{Binding Source={x:Static helper:TimeSystem.Instance}, Path=CurrentTime.TimerList[3]}" />
                            <TextBlock
                                Margin="8,0,37,0"
                                VerticalAlignment="Bottom"
                                Style="{StaticResource tbTimeStyle}"
                                Text="M" />
                            <TextBlock Style="{StaticResource tbNumStyle}" Text="{Binding Source={x:Static helper:TimeSystem.Instance}, Path=CurrentTime.TimerList[4]}" />
                            <TextBlock Style="{StaticResource tbNumStyle}" Text="{Binding Source={x:Static helper:TimeSystem.Instance}, Path=CurrentTime.TimerList[5]}" />
                            <TextBlock
                                Margin="8,0,37,0"
                                VerticalAlignment="Bottom"
                                Style="{StaticResource tbTimeStyle}"
                                Text="S" />
                        </StackPanel>

                    </Grid>

                    <Grid
                        Name="minPage"
                        Grid.Row="1"
                        VerticalAlignment="Bottom">
                        <StackPanel
                            Grid.Row="2"
                            Margin="25,50"
                            HorizontalAlignment="Right"
                            Orientation="Horizontal">
                            <!--<ToggleButton
                              Width="88"
                              Height="52"
                              Background="Transparent"
                              BorderThickness="0"
                              Command="{Binding OnSettingAgainCommand}"
                              Content="ReSet"
                              Style="{x:Null}" />-->

                            <Button
                                Name="CancelText"
                                Height="60"
                                Margin="0,0,40,0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                hc:BorderElement.CornerRadius="10"
                                Background="Transparent"
                                BorderThickness="0"
                                Command="{Binding OnSettingAgainCommand}"
                                Content="ReSet"
                                FontSize="40"
                                Foreground="#636870" />

                            <ToggleButton
                                Grid.Column="2"
                                Width="258"
                                Height="84"
                                Margin="20,0"
                                HorizontalAlignment="Stretch"
                                Command="{Binding OnStartAgainCommand}"
                                Content="ReStart"
                                Style="{StaticResource btWhiteBg}"
                                Tag="42" />
                        </StackPanel>
                    </Grid>

                    <Grid
                        Name="maxPage"
                        Grid.Row="1"
                        VerticalAlignment="Bottom"
                        Visibility="Collapsed">
                        <StackPanel
                            Grid.Row="1"
                            Margin="0,0,0,100"
                            HorizontalAlignment="Center"
                            Orientation="Horizontal">
                            <ToggleButton
                                Margin="0,0,80,0"
                                VerticalAlignment="Center"
                                DockPanel.Dock="Left"
                                Style="{StaticResource CloseMaxStyle}" />

                            <ToggleButton
                                Width="120"
                                Height="60"
                                Margin="0,0,80,0"
                                HorizontalAlignment="Right"
                                hc:BorderElement.CornerRadius="30"
                                Background="#667180"
                                BorderBrush="#667180"
                                Command="{Binding OnSettingAgainCommand}"
                                Content="ReSet"
                                FontSize="25"
                                Foreground="#ffffff" />

                            <ToggleButton
                                Width="150"
                                Height="60"
                                Margin="10"
                                HorizontalAlignment="Stretch"
                                hc:BorderElement.CornerRadius="30"
                                Background="#298CFF"
                                BorderBrush="#ffffff"
                                BorderThickness="5"
                                Command="{Binding OnStartAgainCommand}"
                                Content="ReStart"
                                FontSize="25"
                                Foreground="#ffffff" />
                        </StackPanel>
                    </Grid>
                </Grid>
                <ControlTemplate.Triggers>
                    <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType={x:Type ct:CustomWindow}}}" Value="Maximized">

                        <Setter TargetName="minPage" Property="Visibility" Value="Collapsed" />
                        <Setter TargetName="maxPage" Property="Visibility" Value="Visible" />
                        <Setter TargetName="gggid" Property="Margin" Value="0,-300,0,0" />
                    </DataTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!--  Start时候三秒后缩小窗口  -->
            <ControlTemplate x:Key="Mintime" TargetType="{x:Type ContentControl}">
                <Grid Name="ggid">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="48" />
                        <ColumnDefinition Width="1.5*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        Margin="0,-8,0,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontSize="50"
                        FontWeight="Bold"
                        Foreground="#ffffff"
                        Text="-"
                        Visibility="{Binding Source={x:Static helper:TimeSystem.Instance}, Path=CurrentTime.IsOverTime, Converter={StaticResource Boolean2VisibilityConverter}}" />
                    <StackPanel
                        Grid.Column="1"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Orientation="Horizontal">
                        <TextBlock Style="{StaticResource tbNumMinStyle}" Text="{Binding Source={x:Static helper:TimeSystem.Instance}, Path=CurrentTime.TimerList[0]}" />
                        <TextBlock Style="{StaticResource tbNumMinStyle}" Text="{Binding Source={x:Static helper:TimeSystem.Instance}, Path=CurrentTime.TimerList[1]}" />
                        <TextBlock
                            Margin="8,0,8,0"
                            VerticalAlignment="Center"
                            Style="{StaticResource tbTimeMinStyle}"
                            Text="H" />
                        <TextBlock Style="{StaticResource tbNumMinStyle}" Text="{Binding Source={x:Static helper:TimeSystem.Instance}, Path=CurrentTime.TimerList[2]}" />
                        <TextBlock Style="{StaticResource tbNumMinStyle}" Text="{Binding Source={x:Static helper:TimeSystem.Instance}, Path=CurrentTime.TimerList[3]}" />
                        <TextBlock
                            Margin="8,0,8,0"
                            VerticalAlignment="Center"
                            Style="{StaticResource tbTimeMinStyle}"
                            Text="M" />
                        <TextBlock Style="{StaticResource tbNumMinStyle}" Text="{Binding Source={x:Static helper:TimeSystem.Instance}, Path=CurrentTime.TimerList[4]}" />
                        <TextBlock Style="{StaticResource tbNumMinStyle}" Text="{Binding Source={x:Static helper:TimeSystem.Instance}, Path=CurrentTime.TimerList[5]}" />
                        <TextBlock
                            Margin="8,0,0,0"
                            VerticalAlignment="Center"
                            Style="{StaticResource tbTimeMinStyle}"
                            Text="S" />
                    </StackPanel>
                    <ToggleButton
                        Grid.Column="2"
                        Height="110"
                        Padding="0"
                        HorizontalAlignment="Stretch"
                        Background="Transparent"
                        BorderThickness="0"
                        Command="{Binding OnPauseOrContinueCommand}"
                        Foreground="#ffffff">
                        <ToggleButton.Style>
                            <Style BasedOn="{StaticResource ToggleButtonCustom}" TargetType="ToggleButton">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Source={x:Static helper:TimeSystem.Instance}, Path=IsPause}" Value="true">
                                        <Setter Property="Content">
                                            <Setter.Value>
                                                <Image
                                                    Width="128"
                                                    Height="68"
                                                    Source="{StaticResource TimeCountStart}" />
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Source={x:Static helper:TimeSystem.Instance}, Path=IsPause}" Value="false">
                                        <Setter Property="Content">
                                            <Setter.Value>
                                                <Image
                                                    Width="128"
                                                    Height="68"
                                                    Source="{StaticResource TimeCountPause}" />
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>

                    </ToggleButton>
                </Grid>
                <ControlTemplate.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Source={x:Static helper:TimeSystem.Instance}, Path=IsPause}" Value="false" />
                            <Condition Binding="{Binding Source={x:Static helper:TimeSystem.Instance}, Path=CurrentTime.IsOverTime, Mode=OneWay}" Value="false" />
                        </MultiDataTrigger.Conditions>

                    </MultiDataTrigger>

                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Source={x:Static helper:TimeSystem.Instance}, Path=IsPause}" Value="true" />
                            <Condition Binding="{Binding Source={x:Static helper:TimeSystem.Instance}, Path=CurrentTime.IsOverTime, Mode=OneWay}" Value="false" />
                        </MultiDataTrigger.Conditions>
                    </MultiDataTrigger>

                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Source={x:Static helper:TimeSystem.Instance}, Path=IsPause}" Value="true" />
                            <Condition Binding="{Binding Source={x:Static helper:TimeSystem.Instance}, Path=CurrentTime.IsOverTime, Mode=OneWay}" Value="true" />
                        </MultiDataTrigger.Conditions>

                    </MultiDataTrigger>

                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Source={x:Static helper:TimeSystem.Instance}, Path=IsPause}" Value="false" />
                            <Condition Binding="{Binding Source={x:Static helper:TimeSystem.Instance}, Path=CurrentTime.IsOverTime, Mode=OneWay}" Value="true" />
                        </MultiDataTrigger.Conditions>

                    </MultiDataTrigger>

                </ControlTemplate.Triggers>
            </ControlTemplate>
        </ResourceDictionary>
    </Window.Resources>


    <hc:Interaction.Triggers>
        <hc:EventTrigger EventName="PreviewMouseLeftButtonDown">
            <ct:InvokeCommandAction Command="{Binding OnTouchDownCommand}" PassEventArgsToCommand="True" />
        </hc:EventTrigger>
        <hc:EventTrigger EventName="PreviewMouseMove">
            <ct:InvokeCommandAction Command="{Binding OnTouchMoveCommand}" PassEventArgsToCommand="True" />
        </hc:EventTrigger>
        <hc:EventTrigger EventName="PreviewMouseLeftButtonUp">
            <ct:InvokeCommandAction Command="{Binding OnTouchUpCommand}" />
        </hc:EventTrigger>
        <hc:EventTrigger EventName="Closing">
            <ct:InvokeCommandAction Command="{Binding OnCloseCommand}" />
        </hc:EventTrigger>
    </hc:Interaction.Triggers>

    <Grid Name="grid">

        <ContentControl
            x:Name="Contentcontrol"
            VerticalAlignment="Stretch"
            Template="{StaticResource OpenTime}"
            Visibility="{Binding Status, Converter={StaticResource PageStatusConvert}, ConverterParameter={x:Static ct:TimerStatus.Setting}}" />

        <ContentControl
            Name="te"
            VerticalAlignment="Stretch"
            Template="{StaticResource IsStarting}"
            Visibility="{Binding Status, Converter={StaticResource PageStatusConvert}, ConverterParameter={x:Static ct:TimerStatus.Nomal}}" />

        <ContentControl
            VerticalAlignment="Stretch"
            Template="{StaticResource EndTime}"
            Visibility="{Binding Status, Converter={StaticResource PageStatusConvert}, ConverterParameter={x:Static ct:TimerStatus.OverTime}}" />

        <ContentControl
            VerticalAlignment="Stretch"
            Template="{StaticResource Mintime}"
            Visibility="{Binding Status, Converter={StaticResource PageStatusConvert}, ConverterParameter={x:Static ct:TimerStatus.MinWin}}" />
    </Grid>
</ct:CustomWindow>
